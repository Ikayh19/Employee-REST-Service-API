swagger: "2.0"
info:
  description: "This is a server for an Employee REST service API"
  version: "1.0.0"
  title: "Employee REST service"
  termsOfService: "http://swagger.io/terms/"
  contact: "07034575516"
    email: "ejiofor.ikechukwu@babbangona.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:5000"
basePath: "/v1"
tags:
- name: "Employee"
  description: "create, remove, update & delete employee details"

schemes:
- "http"

paths:
  /employee:
    get:
      tags:
      - "Employee"
      summary: "Get employee"
      description: "This uses the 'GET' request to retrieve all stored employee details from database"
      operationId: "getEmployees"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
    post:
      tags:
      - "Employee"
      summary: "Create new employee"
      description: "This uses the 'POST' request to create new employee details and store in database"
      operationId: "postEmployee"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Employee details"
        description: "Employee object that needs to be added to database"
        required: true
        schema:
          $ref: "#/definitions/Employee"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Employee not found"
        "405":
          description: "Validation exception"
      
  /employee/{employee-Id}:
    get:
      tags:
      - "Employee"
      summary: "Find employee by ID"
      description: "Returns a single employee"
      operationId: "getEmployeeById"
      parameters:
      - name: "employee-Id"
        in: "path"
        description: "ID of employee to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Employee"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Employee not found"
    put:
      tags:
      - "Employee"
      summary: "Update employee"
      description: "Update an existing employee"
      operationId: "updateEmployee"
      parameters:
      - name: "employee-Id"
        in: "path"
        description: "employee ID that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "Updated employee"
        description: "Updated employee object"
        required: true
        schema:
          $ref: "#/definitions/Employee"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "Employee not found"
    delete:
      tags:
      - "Employee"
      summary: "Delete employee"
      description: "Delete an employee"
      operationId: "deleteEmployee"
      parameters:
      - name: "employee-Id"
        in: "path"
        description: "The employee ID that needs to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid username supplied"
        "404":
          description: "Employee not found"
    
definitions:
  Employee:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      organization:
        type: "string"
      designation:
        type: "string"
      salary:
        type: "integer"
        format: "int64"
      status:
        type: "integer"
        format: "int32"
        description: "Employee Status"
      is_deleted:
        type: "integer"
        format: "int32"
        
    xml:
      name: "Employee"
      
      

  
